// GENERATED by @edgedb/generate v0.0.7
// Run 'npx @edgedb/generate edgeql-js' to re-generate

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $Role = {
  "user": $.$expr_Literal<$Role>;
  "admin": $.$expr_Literal<$Role>;
} & $.EnumType<"default::Role", ["user", "admin"]>;
const Role: $Role = $.makeType<$Role>(_.spec, "351e0c3a-8694-11ed-b62c-0b39bcb50927", _.syntax.literal);

export type $BaseλShape = $.typeutil.flatten<_std.$Object_a95265547ccd11edaf577b7152587f02λShape & {
  "createdAt": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
}>;
type $Base = $.ObjectType<"default::Base", $BaseλShape, null, [
  ..._std.$Object_a95265547ccd11edaf577b7152587f02['__exclusives__'],
]>;
const $Base = $.makeType<$Base>(_.spec, "35162b59-8694-11ed-8438-1bcfc620fd46", _.syntax.literal);

const Base: $.$expr_PathNode<$.TypeSet<$Base, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Base, $.Cardinality.Many), null);

export type $CategoryλShape = $.typeutil.flatten<$BaseλShape & {
  "posts": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, true,  false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<categories[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<categories": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Category = $.ObjectType<"default::Category", $CategoryλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Category = $.makeType<$Category>(_.spec, "35180193-8694-11ed-a2cc-a10ee4f7ec5e", _.syntax.literal);

const Category: $.$expr_PathNode<$.TypeSet<$Category, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Category, $.Cardinality.Many), null);

export type $PostλShape = $.typeutil.flatten<$BaseλShape & {
  "categories": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, false,  false, false>;
  "author": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "published": $.PropertyDesc<_std.$bool, $.Cardinality.One, false, false, false, true>;
  "<posts[is Category]": $.LinkDesc<$Category, $.Cardinality.Many, {}, false, false,  false, false>;
  "<posts[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<posts": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Post = $.ObjectType<"default::Post", $PostλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Post = $.makeType<$Post>(_.spec, "3519c25d-8694-11ed-804e-f10e3dfbf8a1", _.syntax.literal);

const Post: $.$expr_PathNode<$.TypeSet<$Post, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Post, $.Cardinality.Many), null);

export type $ProfileλShape = $.typeutil.flatten<$BaseλShape & {
  "user": $.LinkDesc<$User, $.Cardinality.Many, {}, false, true,  false, false>;
  "bio": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "<profile[is User]": $.LinkDesc<$User, $.Cardinality.Many, {}, false, false,  false, false>;
  "<profile": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Profile = $.ObjectType<"default::Profile", $ProfileλShape, null, [
  ...$Base['__exclusives__'],
]>;
const $Profile = $.makeType<$Profile>(_.spec, "351c6f9d-8694-11ed-bf1f-698e9f6d0cb9", _.syntax.literal);

const Profile: $.$expr_PathNode<$.TypeSet<$Profile, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Profile, $.Cardinality.Many), null);

export type $UserλShape = $.typeutil.flatten<$BaseλShape & {
  "profile": $.LinkDesc<$Profile, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "posts": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, true,  false, false>;
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "role": $.PropertyDesc<$Role, $.Cardinality.One, false, false, false, true>;
  "<author[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user[is Profile]": $.LinkDesc<$Profile, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<user": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ...$Base['__exclusives__'],
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $User = $.makeType<$User>(_.spec, "351e3873-8694-11ed-a71f-53cf2cd330cb", _.syntax.literal);

const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($User, $.Cardinality.Many), null);



export { Role, $Base, Base, $Category, Category, $Post, Post, $Profile, Profile, $User, User };

type __defaultExports = {
  "Role": typeof Role;
  "Base": typeof Base;
  "Category": typeof Category;
  "Post": typeof Post;
  "Profile": typeof Profile;
  "User": typeof User
};
const __defaultExports: __defaultExports = {
  "Role": Role,
  "Base": Base,
  "Category": Category,
  "Post": Post,
  "Profile": Profile,
  "User": User
};
export default __defaultExports;
