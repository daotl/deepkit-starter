// refract https://github.com/cwqt/refract - generated in 1.777 ms -----------------
// datasource ----------------------------------------------------------------------

datasource db {
	provider           = "postgresql"
	url                = env("POSTGRES_URL")
	shadowDatabaseUrl  = env("POSTGRES_SHADOW_URL")
}

// generators ----------------------------------------------------------------------

generator client {
	provider         = "prisma-client-js"
	previewFeatures  = []
}

generator erd {
	provider  = "prisma-erd-generator"
	output    = "generated/erd.md"
}

generator dbml {
	provider             = "prisma-dbml-generator"
	output               = "generated"
	outputName           = "schema.dbml"
	projectName          = "BDWare BaaS Web"
	projectDatabaseType  = "PostgreSQL"
}

generator typegraphql {
	provider  = "typegraphql-prisma"
	output    = "../src/graphql/prisma/generated"
}

// enums ---------------------------------------------------------------------------

enum Role {
	// user
	user
	// admin
	admin
}

// models --------------------------------------------------------------------------

model User {
	id         Int       @id @default(autoincrement())
	createdAt  DateTime  @default(now())
	updatedAt  DateTime  @updatedAt
	email      String    @unique
	name       String?
	role       Role      @default(user)
	posts      Post[]
	profile    Profile?
}

model Profile {
	id      Int      @id @default(autoincrement())
	bio     String?
	user    User     @relation(fields: [userId], references: [id])
	userId  Int      @unique
}

model Post {
	id          Int         @id @default(autoincrement())
	createdAt   DateTime    @default(now())
	updatedAt   DateTime    @updatedAt
	title       String
	content     String
	published   Boolean     @default(false)
	author      User?       @relation(fields: [authorId], references: [id])
	authorId    Int?
	categories  Category[]
}

model Category {
	id         Int       @id @default(autoincrement())
	createdAt  DateTime  @default(now())
	updatedAt  DateTime  @updatedAt
	name       String
	posts      Post[]
}